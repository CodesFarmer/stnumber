#PNet
#dim 12, dim 12
layer {
  top: "data"
  top: "label"
  name: "PData"
  type: "HDF5Data"
  include {
    phase: TRAIN
  }
  hdf5_data_param {
    source: "data/train_pnet.txt"
    batch_size: 256
    shuffle: true
  }
}

layer {
  top: "data"
  top: "label"
  name: "PData"
  type: "HDF5Data"
  include {
    phase: TEST
  }
  hdf5_data_param {
    source: "data/test_pnet.txt"
    batch_size: 2048
  }
}

layer {
  bottom: "label"
  top: "clalabel"
  top: "roi"
  name: "slicer"
  type: "Slice"
  slice_param {
    axis: 1
    slice_point: 1
  }
}

layer{
  bottom: "data"
  top: "conv1"
  name: "conv1"
  type: "Convolution"
  convolution_param {
    num_output: 10
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
}

layer {
  bottom: "conv1"
  top: "conv1"
  name: "prelu1"
  type: "PReLU"
}

layer {
  bottom: "conv1"
  top: "pool1"
  name: "pool1"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

layer {
  bottom: "pool1"
  top: "conv2"
  name: "conv2"
  type: "Convolution"
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
}

layer {
  bottom: "conv2"
  top: "conv2"
  name: "prelu2"
  type: "PReLU"
}

layer {
  bottom: "conv2"
  top: "conv3"
  name: "conv3"
  type: "Convolution"
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param{
    lr_mult: 2
    decay_mult: 0
  }
}

layer {
  bottom: "conv3"
  top: "conv3"
  name: "prelu3"
  type: "PReLU"
}

layer {
  bottom: "conv3"
  top: "conv4_1"
  name: "conv4_1"
  type: "Convolution"
  convolution_param {
    num_output: 2
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
}

layer {
  bottom: "conv3"
  top: "conv4_2"
  name: "conv4_2"
  type: "Convolution"
  convolution_param {
    num_output: 4
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
}

layer {
  bottom: "conv4_1"
  bottom: "clalabel"
  top: "label_loss"
  name: "label_loss"
  type: "SoftmaxWithLoss"
  loss_weight: 1.0
#  loss_param {
#    ignore_label: -1
#  }
}

layer {
  bottom: "conv4_2"
  bottom: "roi"
  top: "roi_loss"
  name: "roi_loss"
  type: "EuclideanLoss"
  loss_weight: 0.5
  loss_param {
    ignore_label: 0
  }
}


layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "conv4_1"
  bottom: "clalabel"
  top: "accuracy"
  include {
    phase: TEST
  }
#  accuracy_param {
#    ignore_label: -1
#  }
}
